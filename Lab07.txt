Ex.1

CREATE TABLE student (
	student_id INTEGER UNSIGNED NOT NULL PRIMARY KEY,
	name VARCHAR(10) NOT NULL,
	year INTEGER NOT NULL DEFAULT 1,
	dept_no INTEGER NOT NULL,
	major VARCHAR(20)
);

CREATE TABLE department (
	dept_no INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	dept_name VARCHAR(20) NOT NULL UNIQUE,
	office VARCHAR(20) NOT NULL,
	office_tel VARCHAR(13)
);


ALTER TABLE student
	CHANGE COLUMN major major VARCHAR(40);

ALTER TABLE student
	ADD COLUMN gender VARCHAR(6) NOT NULL;

ALTER TABLE department
	CHANGE COLUMN dept_name dept_name VARCHAR(40) NOT NULL UNIQUE;

ALTER TABLE department
	CHANGE COLUMN office office VARCHAR(30) NOT NULL;

DESC student;

DESC department;



Ex. 2

INSERT INTO student VALUES(20070002, "James Bond", 3, 4, "Business Administration”);
INSERT INTO student VALUES(20060001, “Queenie”, 4, 4, “Business Administration”);
INSERT INTO student VALUES(20030001, "Reonardo", 4, 2, "Electronic Engineering”);
INSERT INTO student VALUES(20040003, "Julia", 3, 2, "Electronic Engineering”);
INSERT INTO student VALUES(20060002, "Roosevelt", 3, 1, "Computer Science”);
INSERT INTO student VALUES(20100002, "Fearne", 3, 4, "Business Administration”);
INSERT INTO student VALUES(20110001, "Chloe", 2, 1, "Computer Science”);
INSERT INTO student VALUES(20080003, "Amy", 4, 3, "Law”);
INSERT INTO student VALUES(20040002, "Selina", 4, 5, "English Literature”);
INSERT INTO student VALUES(20070001, "Ellen", 4, 4, "Business Administration”);
INSERT INTO student VALUES(20100001, "Kathy", 3, 4, "Business Administration”);
INSERT INTO student VALUES(20110002, "Lucy", 2, 2, "Electronic Engineering”);
INSERT INTO student VALUES(20030002, "Michelle", 5, 1, "Computer Science”);
INSERT INTO student VALUES(20070003, "April", 4, 3, "Law”);
INSERT INTO student VALUES(20070005, "Alicia", 2, 5, "English Literature”);
INSERT INTO student VALUES(20100003, "Yullia", 3, 1, "Computer Science”);
INSERT INTO student VALUES(20070007, "Ashlee", 2, 4, "Business Administration”);


INSERT INTO department(dept_name, office, office_tel) VALUES('Computer Science', 'Engineering building', '02-3290-0123’);
INSERT INTO department(dept_name, office, office_tel) VALUES('Electronic Engineering', 'Engineering building', '02-3290-2345’);
INSERT INTO department(dept_name, office, office_tel) VALUES('Law', 'Law building', '02-3290-7896’);
INSERT INTO department(dept_name, office, office_tel) VALUES( 'Business Administration', 'Administration building', '02-3290-1112’);
INSERT INTO department(dept_name, office, office_tel) VALUES('English Literature', 'Literature building', '02-3290-4412’);



Ex. 3

1. REPLACE INTO department(dept_no, dept_name, office, office_tel) VALUES(2, ‘Electronic and Electrical Engineering', 'Engineering building', '02-3290-2345’);

2. INSERT INTO department(dept_name, office, office_tel) VALUES('Education’, ‘Education building', '02-3290-2347’);

3. REPLACE INTO sutdent VALUES(20110001, "Chloe", 2, 1, “Education”);

4. DELETE FROM student WHERE name = “Michelle”;

5. DELETE FROM student WHERE name = “Fearne”;



Ex. 4

1. SELECT * FROM student WHERE major = 'Computer Science’;
2. SELECT student_id, year, major FROM student;
3. SELECT * FROM student WHERE year = 3;
4. SELECT * FROM student WHERE year = 1 or year = 2;
5. SELECT * FROM student JOIN department ON major = dept_name
	WHERE dept_no = 4;


Ex. 5

1. SELECT * FROM student WHERE student_id LIKE ‘2007%’;
2. SELECT * FROM student ORDER BY student_ide ASC;
3. SELECT * FROM student GROUP BY major HAVING avg(year) > 3;
4. SELECT * FROM student WHERE major = ‘Business Administration’ and student_id LIKE ‘2007%’ LIMIT 2;



Ex.6

1. SELECT name, language FROM countries JOIN languages ON code = country_code WHERE independence_year = 1948;
2. SELECT name
	FROM countries INNER JOIN languages ON code = country_code
	WHERE language='English' and name in (SELECT name FROM countries INNER JOIN languages ON code=country_code WHERE language=‘French’);

3. SELECT language, count(language)
	FROM countries JOIN languages ON code = country_code and life_expectancy > 75
	GROUP BY language
	ORDER BY count(language) DESC
	LIMIT 5;

4. SELECT capital SELECT code
	FROM countires INNER JOIN languages ON code = country_code
	WHERE language='English' and name in (SELECT name FROM countries INNER JOIN languages ON code=country_code WHERE language=‘Korean’);

5. SELECT capital
	FROM countries JOIN languages ON code = country_code
	WHERE country_code in (select country_code from languages where official='T' group by country_code having sum(percentage)>20 and sum(percentage)<50);


Ex.7

1. select role from roles join 
